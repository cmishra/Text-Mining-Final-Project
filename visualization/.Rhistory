summary(lm2)$sigma
})))
mean(unlist(lapply(1:10, function(i) {
test <- data.table(x=runif(100, -1, 1), y=runif(100, -1, 1))
point1 <- runif(2, -1, 1)
point2 <- runif(2, -1, 1)
m <- (point1[2]-point2[2])/(point1[1] - point2[1])
b <- point1[2]-point1[1]*m
test[,c2:=ifelse(y>b+m*x, 1, 0)]
lm2 <- lm(data=test, c2 ~ x + y)
summary(lm2)$sigma
})))
mean(unlist(lapply(1:10, function(i) {
test <- data.table(x=runif(100, -1, 1), y=runif(100, -1, 1))
point1 <- runif(2, -1, 1)
point2 <- runif(2, -1, 1)
m <- (point1[2]-point2[2])/(point1[1] - point2[1])
b <- point1[2]-point1[1]*m
test[,c2:=ifelse(y>b+m*x, 1, 0)]
lm2 <- lm(data=test, c2 ~ x + y)
summary(lm2)$sigma
})))
mean(unlist(lapply(1:10, function(i) {
test <- data.table(x=runif(100, -1, 1), y=runif(100, -1, 1))
point1 <- runif(2, -1, 1)
point2 <- runif(2, -1, 1)
m <- (point1[2]-point2[2])/(point1[1] - point2[1])
b <- point1[2]-point1[1]*m
test[,c2:=ifelse(y>b+m*x, 1, 0)]
lm2 <- lm(data=test, c2 ~ x + y)
summary(lm2)$sigma
})))
mean(unlist(lapply(1:1000, function(i) {
test <- data.table(x=runif(100, -1, 1), y=runif(100, -1, 1))
point1 <- runif(2, -1, 1)
point2 <- runif(2, -1, 1)
m <- (point1[2]-point2[2])/(point1[1] - point2[1])
b <- point1[2]-point1[1]*m
test[,c2:=ifelse(y>b+m*x, 1, 0)]
lm2 <- lm(data=test, c2 ~ x + y)
summary(lm2)$sigma
})))
summary(lm2)
test2 <- data.table(x=runif(100, -1, 1), y=runif(100, -1, 1))
library(data.table)
test2 <- data.table(x=runif(100, -1, 1), y=runif(100, -1, 1))
test2[,x2:=x^2]
test2[,y2:=y^2]
test2
test2[,xy=x*y]
test2
test2[,xy:=x*y]
test2
test2[,cls:=ifelse(x2+y2-0.6 >=0, 1, -1)]
test2
lm(cls ~ x + y + x2 + y2 + xy)
test2
str(test2)
lm(cls ~ x + y + x2 + y2 + xy, data=test2)
summary(lm(cls ~ x + y + x2 + y2 + xy, data=test2))
str(summary(lm(cls ~ x + y + x2 + y2 + xy, data=test2)))
coef(lm(cls ~ x + y + x2 + y2 + xy, data=test2)
)
mean(unlist(lapply(1:1000, function(i) {test2 <- data.table(x=runif(100, -1, 1), y=runif(100, -1, 1))
test2[,x2:=x^2]
test2[,y2:=y^2]
test2[,xy:=x*y]
test2[,cls:=ifelse(x2+y2-0.6 >=0, 1, -1)]
coef(lm(cls ~ x + y + x2 + y2 + xy, data=test2))
})))
mean(unlist(lapply(1:1000, function(i) {
test2 <- data.table(x=runif(100, -1, 1), y=runif(100, -1, 1))
test2[,x2:=x^2]
test2[,y2:=y^2]
test2[,xy:=x*y]
test2[,cls:=ifelse(x2+y2-0.6 >=0, 1, -1)]
coef(lm(cls ~ x + y + x2 + y2 + xy, data=test2))
}), recursive=F))
unlist(lapply(1:10, function(i) {
test2 <- data.table(x=runif(100, -1, 1), y=runif(100, -1, 1))
test2[,x2:=x^2]
test2[,y2:=y^2]
test2[,xy:=x*y]
test2[,cls:=ifelse(x2+y2-0.6 >=0, 1, -1)]
coef(lm(cls ~ x + y + x2 + y2 + xy, data=test2))
}), recursive=F)
matrix(unlist(lapply(1:10, function(i) {
test2 <- data.table(x=runif(100, -1, 1), y=runif(100, -1, 1))
test2[,x2:=x^2]
test2[,y2:=y^2]
test2[,xy:=x*y]
test2[,cls:=ifelse(x2+y2-0.6 >=0, 1, -1)]
coef(lm(cls ~ x + y + x2 + y2 + xy, data=test2))
}), recursive=F), ncol=6, nrow=10)
?matrix
matrix(unlist(lapply(1:10, function(i) {
test2 <- data.table(x=runif(100, -1, 1), y=runif(100, -1, 1))
test2[,x2:=x^2]
test2[,y2:=y^2]
test2[,xy:=x*y]
test2[,cls:=ifelse(x2+y2-0.6 >=0, 1, -1)]
coef(lm(cls ~ x + y + x2 + y2 + xy, data=test2))
}), recursive=F), ncol=6, nrow=10, byrow=T)
?apply
apply(weights, 2, mean)
dim(weights)
weigths <- matrix(unlist(lapply(1:100, function(i) {
test2 <- data.table(x=runif(100, -1, 1), y=runif(100, -1, 1))
test2[,x2:=x^2]
test2[,y2:=y^2]
test2[,xy:=x*y]
test2[,cls:=ifelse(x2+y2-0.6 >=0, 1, -1)]
coef(lm(cls ~ x + y + x2 + y2 + xy, data=test2))
}), recursive=F), ncol=6, nrow=100, byrow=T)
apply(weights, 2, mean)
weights
matrix(unlist(lapply(1:100, function(i) {
test2 <- data.table(x=runif(100, -1, 1), y=runif(100, -1, 1))
test2[,x2:=x^2]
test2[,y2:=y^2]
test2[,xy:=x*y]
test2[,cls:=ifelse(x2+y2-0.6 >=0, 1, -1)]
coef(lm(cls ~ x + y + x2 + y2 + xy, data=test2))
}), recursive=F), ncol=6, nrow=100, byrow=T)
weights
weights()
apply(weigths, 2, mean)
weigths <- matrix(unlist(lapply(1:100, function(i) {
test2 <- data.table(x=runif(100, -1, 1), y=runif(100, -1, 1))
test2[,x2:=x^2]
test2[,y2:=y^2]
test2[,xy:=x*y]
test2[,cls:=ifelse(x2+y2-0.6 >=0, 1, 0)]
coef(lm(cls ~ x + y + x2 + y2 + xy, data=test2))
}), recursive=F), ncol=6, nrow=100, byrow=T)
apply(weigths, 2, mean)
source('C:/Users/cheta_000/Dropbox/College/3_Third Year/06_Sixth Semester/R Working Directory/Infectious Disease Project/methods.R')
beds
beds[,.(exposure=End_dttm - Start_dttm)]
beds[,.(exposure=End_dttm - Start_dttm)][,sum(exposure), by=PID]
beds[,.(exposure=End_dttm - Start_dttm, PID)][,sum(exposure), by=PID]
beds[,.(exposure=End_dttm - Start_dttm, PID)][,sumExposure=sum(exposure), by=PID]
beds[,.(exposure=End_dttm - Start_dttm, PID)][,.(sumExposure=sum(exposure)), by=PID]
?merge
merge(beds, patients, by=PID)
str(beds)
str(patients)
merge(beds, patients, by="PID")
merge(beds, patients, by=PID)
merge(beds, patients, by=c("PID"))
beds[,"PID":=as.factor(PID)]
str(beds)
save(patients, beds, Px, Dx, file="O:/clinlabs/Microbio/CRE Environmental/cleaned KPC patient data/PatsbedsDxPx.RData")
str(ctrlBed)
merge(beds, patients, by=c("PID"))
request <- merge(beds, patients, by=c("PID"))
request
request[Start_dttm<Cultdate]
request[Start_dttm > Cultdate,.(exposure=End_dttm - Start_dttm, PID)][,.(sumExposure=sum(exposure)), by=PID]
request[Start_dttm > Cultdate,.(exposure=End_dttm - Start_dttm, PID)
][,.(sumExposure=sum(exposure)/(3600*24)), by=PID]
request[Start_dttm > Cultdate,.(exposure=End_dttm - Start_dttm, PID)
][,.(sumExposure=(sum(exposure)/(3600*24))), by=PID]
request[Start_dttm > Cultdate,.(exposure=End_dttm - Start_dttm, PID)
][,.(sumExposure=(as.numeric(sum(exposure))/(3600*24))), by=PID]
request <- request[Start_dttm > Cultdate,.(exposure=End_dttm - Start_dttm, PID)
][,.(sumExposure=(as.numeric(sum(exposure))/(3600*24))), by=PID]
request
write.csv(request, file="O:/clinlabs/Microbio/CRE Environmental/exposure.csv",
row.names=F)
request <- request[Start_dttm > Cultdate,.(exposure=End_dttm - Start_dttm, PID)
][,.(ExposureLengthDays=(as.numeric(sum(exposure))/(3600*24))), by=PID]
request <- merge(beds, patients, by=c("PID"))
request <- request[Start_dttm > Cultdate,.(exposure=End_dttm - Start_dttm, PID)
][,.(ExposureLengthDays=(as.numeric(sum(exposure))/(3600*24))), by=PID]
write.csv(request, file="O:/clinlabs/Microbio/CRE Environmental/exposure.csv",
row.names=F)
mean(request[,ExposureLengthDays])
boxplot(data=request, log(ExposureLengthDays)~Year)
request <- merge(beds, patients, by=c("PID"))
request <- request[Start_dttm > Cultdate,.(exposure=End_dttm - Start_dttm, PID, Year=year(Cultdate))
][,.(ExposureLengthDays=(as.numeric(sum(exposure))/(3600*24)), unique(Year)), by=PID]
request
request <- merge(beds, patients, by=c("PID"))
request <- request[Start_dttm > Cultdate,.(exposure=End_dttm - Start_dttm, PID, Year=year(Cultdate))
][,.(ExposureLengthDays=(as.numeric(sum(exposure))/(3600*24)), Year=unique(Year)), by=PID]
request
write.csv(request, file="O:/clinlabs/Microbio/CRE Environmental/exposure.csv",
row.names=F)
mean(request[,ExposureLengthDays])
boxplot(data=request, log(ExposureLengthDays)~Year)
boxplot(data=request, ExposureLengthDays~Year)
boxplot(data=request, log(ExposureLengthDays)~Year)
boxplot(data=request, ExposureLengthDays~Year)
t.test(request[Year<2012 & ExposureLengthDays>0, ExposureLengthDays],
request[Year>=2012 & ExposureLengthDays>0, ExposureLengthDays])
mean(request[,ExposureLengthDays])
request <- request[Start_dttm < Cultdate & Start_dttm > ymd("2008-08-01"),.(exposure=End_dttm - Start_dttm, PID, Year=year(Cultdate))
][,.(ExposureLengthDays=(as.numeric(sum(exposure))/(3600*24)), Year=unique(Year)), by=PID]
request <- merge(beds, patients, by=c("PID"))
request <- request[Start_dttm < Cultdate & Start_dttm > ymd("2008-08-01"),.(exposure=End_dttm - Start_dttm, PID, Year=year(Cultdate))
][,.(ExposureLengthDays=(as.numeric(sum(exposure))/(3600*24)), Year=unique(Year)), by=PID]
write.csv(request, file="O:/clinlabs/Microbio/CRE Environmental/exposure.csv",
row.names=F)
request <- merge(beds, patients, by=c("PID"))
request <- request[Start_dttm < Cultdate & Start_dttm > ymd("2008-08-01"),.(exposure=End_dttm - Start_dttm, PID, Year=year(Cultdate))
][,.(ExposureLengthDays=(as.numeric(sum(exposure))/(3600*24)), Year=unique(Year)), by=PID]
request
request <- merge(beds, patients, by=c("PID"))
request <- request[Start_dttm < Cultdate & Start_dttm > ymd("2007-08-01"),.(exposure=End_dttm - Start_dttm, PID, Year=year(Cultdate))
][,.(ExposureLengthDays=(as.numeric(sum(exposure))/(3600*24)), Year=unique(Year)), by=PID]
request
t.test(request[Year<2012 & ExposureLengthDays>0, ExposureLengthDays],
request[Year>=2012 & ExposureLengthDays>0, ExposureLengthDays])
boxplot(data=request, ExposureLengthDays~Year)
request <- merge(beds, patients, by=c("PID"))
request[,Start_dttm < Cultdate]
request[Start_dttm < Cultdate]
request[Start_dttm < Cultdate & Start_dttm > ymd("07-08-01")]
request[Start_dttm < Cultdate & Start_dttm > ymd("2007-08-01")]
request[Start_dttm < Cultdate & Start_dttm > formatDate("08/01/2007")]
request <- request[Start_dttm < Cultdate & Start_dttm > formatDate("08/01/2007"),.(exposure=End_dttm - Start_dttm, PID, Year=year(Cultdate))
][,.(ExposureLengthDays=(as.numeric(sum(exposure))/(3600*24)), Year=unique(Year)), by=PID]
request
boxplot(data=request, ExposureLengthDays~Year)
request <- merge(beds, patients, by=c("PID"))
request[Start_dttm < Cultdate & Start_dttm > formatDate("08/01/2007")]
request[Start_dttm < Cultdate & Start_dttm > formatDate("08/01/2007") & PID == 3]
request[Start_dttm < Cultdate & Start_dttm > formatDate("08/01/2007") & PID == 3][,.(ExposureLengthDays=(as.numeric(sum(exposure))/(3600*24)), Year=unique(Year)), by=PID]
request[Start_dttm < Cultdate & Start_dttm > formatDate("08/01/2007") & PID == 3, .(exposure=End_dttm - Start_dttm)]
request[Start_dttm < Cultdate & Start_dttm > formatDate("08/01/2007") & PID == 3, .(exposure=as.numeric(End_dttm - Start_dttm))]
request[Start_dttm < Cultdate & Start_dttm > formatDate("08/01/2007") & PID == 3, .(exposure=End_dttm - Start_dttm)][,exposure]
unclass(request[Start_dttm < Cultdate & Start_dttm > formatDate("08/01/2007") & PID == 3, .(exposure=End_dttm - Start_dttm)][,exposure])
request[Start_dttm < Cultdate & Start_dttm > formatDate("08/01/2007") & PID == 3, .(exposure=End_dttm - Start_dttm)][,exposure])
]
request[Start_dttm < Cultdate & Start_dttm > formatDate("08/01/2007") & PID == 3, .(exposure=End_dttm - Start_dttm)][,exposure]
request[Start_dttm < Cultdate & Start_dttm > formatDate("08/01/2007") & PID == 3, .(exposure=as.numeric(End_dttm - Start_dttm, units=days))]
request[Start_dttm < Cultdate & Start_dttm > formatDate("08/01/2007") & PID == 3, .(exposure=as.numeric(End_dttm - Start_dttm, units=days))]
request
request[Start_dttm < Cultdate & Start_dttm > formatDate("08/01/2007") & PID == 3, .(exposure=as.numeric(End_dttm - Start_dttm, units=days))]
request[Start_dttm < Cultdate & Start_dttm > formatDate("08/01/2007") & PID == 3, .(exposure=as.numeric(End_dttm - Start_dttm, units="days"))]
request[Start_dttm < Cultdate & Start_dttm > formatDate("08/01/2007") & PID == 3, .(exposure=End_dttm - Start_dttm)]
request[Start_dttm < Cultdate & Start_dttm > formatDate("08/01/2007") & PID == 3, .(exposure=as.numeric(End_dttm - Start_dttm, units="days"))]
request[Start_dttm < Cultdate & Start_dttm > formatDate("08/01/2007") & PID == 3, .(exposure=as.numeric(End_dttm - Start_dttm, units="days"), Start_dttm, End_dttm)]
request[Start_dttm < Cultdate & Start_dttm > formatDate("08/01/2007") & PID == 3, .(exposure=as.numeric(min(End_dttm, Cultdate) - Start_dttm, units="days"), Start_dttm, End_dttm)]
request[Start_dttm < Cultdate & Start_dttm > formatDate("08/01/2007") & PID == 3, .(exposure=as.numeric(min(End_dttm, Cultdate) - Start_dttm, units="days"), Start_dttm, End_dttm, Cultdate)]
request[Start_dttm < Cultdate & Start_dttm > formatDate("08/01/2007") & PID == 3, .(exposure=as.numeric(Cultdate - Start_dttm, units="days"), Start_dttm, End_dttm, Cultdate)]
request[Start_dttm < Cultdate & Start_dttm > formatDate("08/01/2007") & PID == 3, .(exposure=as.numeric(min(End_dttm, Cultdate) - Start_dttm, units="days"), Start_dttm, End_dttm, Cultdate)]
request[Start_dttm < Cultdate & Start_dttm > formatDate("08/01/2007") & PID == 3, .(exposure=as.numeric(ifelse(End_dttm < Cultdate, End_dttm - Start_dttm, Cultdate - Start_dttm), units="days"), Start_dttm, End_dttm, Cultdate)]
request[Start_dttm < Cultdate & Start_dttm > formatDate("08/01/2007") & PID == 3, .(exposureE= End_dttm - Start_dttm, exposureC=Cultdate - Start_dttm, Start_dttm, End_dttm, Cultdate)]
request[Start_dttm < Cultdate & Start_dttm > formatDate("08/01/2007") & PID == 3, .(exposureE= End_dttm - Start_dttm, exposureC=Cultdate - Start_dttm, Start_dttm, End_dttm, Cultdate)][,.(exposure:=min(exposureC, exposureE))]
request[Start_dttm < Cultdate & Start_dttm > formatDate("08/01/2007") & PID == 3, .(exposureE= End_dttm - Start_dttm, exposureC=Cultdate - Start_dttm, Start_dttm, End_dttm, Cultdate)][,"exposure":=min(exposureC, exposureE)]
request
request[Start_dttm < Cultdate & Start_dttm > formatDate("08/01/2007") & PID == 3, .(exposureE= End_dttm - Start_dttm, exposureC=Cultdate - Start_dttm, Start_dttm, End_dttm, Cultdate)][,"exposure":=min(exposureC, exposureE)]
request[Start_dttm < Cultdate & Start_dttm > formatDate("08/01/2007") & PID == 3, .(exposureE= End_dttm - Start_dttm, exposureC=Cultdate - Start_dttm, Start_dttm, End_dttm, Cultdate)][,.(exposure=min(exposureC, exposureE))]
request[Start_dttm < Cultdate & Start_dttm > formatDate("08/01/2007") & PID == 3, .(exposureE= End_dttm - Start_dttm, exposureC=Cultdate - Start_dttm, Start_dttm, End_dttm, Cultdate)]
request <- request[Start_dttm < Cultdate & Start_dttm > formatDate("08/01/2007"),
.(exposureE=End_dttm - Start_dttm, exposureC=Cultdate - Start_dttm,
PID, Year=year(Cultdate))
]
request
request[PID == 1, exposureE]
request[1, exposureE]
invisible(lapply(1:nrow(request), function(i) {
request[i,exposure:=min(exposureE, exposuerC)]
}))
invisible(lapply(1:nrow(request), function(i) {
request[i,exposure:=min(exposureE, exposureC)]
}))
request
request[PID==3]
29247*60
request <- merge(beds, patients, by=c("PID"))
request <- request[Start_dttm < Cultdate & Start_dttm > formatDate("08/01/2007"),
.(exposureE=End_dttm - Start_dttm, exposureC=Cultdate - Start_dttm,
PID, Year=year(Cultdate))]
invisible(lapply(1:nrow(request), function(i) {
request[i,exposure:=as.numeric(min(exposureE, exposureC), "days")]
}))
request[,.(ExposureLengthDays=(as.numeric(sum(exposure), units=days)/(3600*24)), Year=unique(Year)), by=PID]
request[,.(ExposureLengthDays=sum(exposure), Year=unique(Year)), by=PID]
request
request <- request[,.(ExposureLengthDays=sum(exposure), Year=unique(Year)), by=PID]
write.csv(request, file="O:/clinlabs/Microbio/CRE Environmental/exposure.csv",
row.names=F)
request
mean(request[,ExposureLengthDays])
t.test(request[Year<2012 & ExposureLengthDays>0, ExposureLengthDays],
request[Year>=2012 & ExposureLengthDays>0, ExposureLengthDays])
boxplot(data=request, ExposureLengthDays~Year)
write.csv(request, file="O:/clinlabs/Microbio/CRE Environmental/exposure.csv",
row.names=F)
request
t.test(request[Year<2012 & ExposureLengthDays>0, ExposureLengthDays],
request[Year>=2012 & ExposureLengthDays>0, ExposureLengthDays])
?permut
?permutation
?perm
?choose
choose(3, 2)
choose(4, 2)
choose(440000, 10)
choose(440000, 10)+choose(440000, 9)+choose(440000, 8)
choose(440000, 10)+choose(440000, 9)+choose(440000, 8)
choose(440000, 10)+choose(440000, 9)-choose(440000, 8)
choose(440000, 9)-choose(440000, 8)
choose(440000, 9)+choose(440000, 8)
choose(440000, 8)
choose(440000*2, 10)
choose(440000*2, 11)
choose(440000*2, 12)
choose(440000*2, 11)
perm = function(n, x) {
return(factorial(n) / factorial(n-x))
}
perm(880000, 10)
choose(880000, 10)
?choose
choose(880000, 1:10)
combUntil <- function(N, dVC, nFactor) {
sum(choose(N*nFactor, 1:dVC))
}
combUntil(440000, 10, 2)
4^(1/2)
4^(1/2)
9^(1/2)
6^(1/2)
?ln
?og
?log
vcBound <- function(N, delta, dVC) {
(8/N*log(4*combUntil(N, dVC, 2)/delta))^(1/2)
}
rademacher <- function(N, delta, dVC) {
(2*log(2*N*combUntil(N, dVC, 1))/N)^(1/2) + (2/N*log(1/delta))^(1/2) + 1/N
}
parrondo <- function(N, delta, dVC, epsilon) {
(1/N*(2*epsilon+log(6*combUntil(N, 10, 2)/delta)))
}
N_levels <- c(5, 10000)
delta_levels <- c(0.9, 0.95, 0.99)
dVC_levels <- c(1, 5, 10)
expand.grid(list(N_levels, delta_levels, dVC_levels))
library(data.table)
dat <- data.table(N_levels, delta_levels, dVC_levels)
dat
expand.grid(dat)
expand.grid(list(N_levels, delta_levels, dVC_levels))
data.table(expand.grid(list(N_levels, delta_levels, dVC_levels)))
dat <- data.table(expand.grid(list(N_levels, delta_levels, dVC_levels)))
dat
setnames(dat, c("Var1", "Var2", "Var3"), c("N", "epsilon", "dVC"))
dat
dat <- data.table(expand.grid(list(N_levels, delta_levels, dVC_levels)))
setnames(dat, c("Var1", "Var2", "Var3"), c("N", "delta", "dVC"))
dat
dat[,vc:=vcBound(N,delta, dVC)]
dat
combUntil <- function(N, dVC, nFactor) {
unlist(lapply(dVC, function(d) {
if (dVC > N)
dVC <- N
sum(choose(N*nFactor, 1:dVC))
}))
}
dat[,vc:=vcBound(N,delta, dVC)]
warnings()
combUntil <- function(N, dVC, nFactor) {
unlist(lapply(dVC, function(d) {
if (d > N)
d <- N
sum(choose(N*nFactor, 1:d))
}))
}
dat[,vc:=vcBound(N,delta, dVC)]
warnings()
str(dat)
warnings()
dat
dat[,VC]
dat[,dVC]
combUntil(dat[,N], dat[,dVC], 2)
dat[,N]
combUntil <- function(N, dVC, nFactor) {
unlist(lapply(1:length(dVC), function(i) {
if (dVC[i] > N[i])
d[i] <- N[i]
sum(choose(N[i]*nFactor, 1:d[i]))
}))
}
dat[,vc:=vcBound(N,delta, dVC)]
combUntil <- function(N, dVC, nFactor) {
unlist(lapply(1:length(dVC), function(i) {
if (dVC[i] > N[i])
dVC[i] <- N[i]
sum(choose(N[i]*nFactor, 1:d[i]))
}))
}
dat[,vc:=vcBound(N,delta, dVC)]
combUntil <- function(N, dVC, nFactor) {
unlist(lapply(1:length(dVC), function(i) {
if (dVC[i] > N[i])
dVC[i] <- N[i]
sum(choose(N[i]*nFactor, 1:dVC[i]))
}))
}
dat[,vc:=vcBound(N,delta, dVC)]
dat
dat[,rademacher:=rademacher(N, delta, dVC)]
devroye <- function(N, delta, dVC, epsilon) {
(1/(2*N)*(4*epsilon*(1+epsilon))+log(4*combUntil(N, 10, N)/delta))^(1/2)
}
dat[,c("parrondoV", "parrondoR") :=list(parrondo(N, delta, dVC, vc),
parrondo(N, delta, dVC, rademacher))]
dat[,c("devroyeV", "devroyeR") :=list(devroye(N, delta, dVC, vc),
devroye(N, delta, dVC, rademacher))]
dat
combUntil(5, 10, 5)
combUntil(440000, 10, 440000)
log(combUntil(440000, 10, 440000)*4/0.95)
log(combUntil(440000, 10, 440000)*4/0.95
)
combUntil(440000, 10, 440000)*4/0.95
log(combUntil(440000, 10, 440000)*4/0.95)
log(combUntil(440000, 10, 440000)*4/0.95)+1/(2*440000)*4*2
sqrt(log(combUntil(440000, 10, 440000)*4/0.95)+1/(2*440000)*4*2)
sqrt(log(combUntil(5, 10, 5)*4/0.95)+1/(2*5)*4*2)
sqrt((log(combUntil(440000, 10, 440000)*4/0.95)+4*2)*1/(2*440000))
sqrt((log(combUntil(5, 10, 5)*4/0.95)+4*2)*1/(2*5))
parrondo <- function(N, delta, dVC, epsilon) {
ret <- 4*epsilon*(1+epsilon)+log(4/delta*combUntil(N, dVC, N))
(ret/(2*N))^(1/2)
}
parrondo(440000, 0.95, 10, 1)
vcBound <- function(N, delta, dVC) {
ret <- log(4*combUntil(N, dVC, 2)/delta)
(8*ret/N)^(1/2)
}
vcBound(10000, 0.95, 10)
vcBound
vcBound(10000, 0.9, 10)
N_levels <- c(5, 10000)
delta_levels <- c(0.1, 0.05, 0.01)
dVC_levels <- c(1, 5, 10)
dat <- data.table(expand.grid(list(N_levels, delta_levels, dVC_levels)))
setnames(dat, c("Var1", "Var2", "Var3"), c("N", "delta", "dVC"))
dat[,vc:=vcBound(N,delta, dVC)]
dat
n_vals <- c(40, 42, 46, 48)*10000
n_vals
vcBound(n_vals, 0.05, 10)
dat
dat[,rademacher:=rademacher(N, delta, dVC)]
dat[,c("parrondoV", "parrondoR") :=list(parrondo(N, delta, dVC, vc),
parrondo(N, delta, dVC, rademacher))]
dat[,c("devroyeV", "devroyeR") :=list(devroye(N, delta, dVC, vc),
devroye(N, delta, dVC, rademacher))]
dat
devroye <- function(N, delta, dVC, epsilon) {
ret <- 4*epsilon*(1+epsilon)+log(4*combUntil(N, dVC, N)/delta)
ret/(2*N)
}
dat[,c("devroyeV", "devroyeR") :=list(devroye(N, delta, dVC, vc),
devroye(N, delta, dVC, rademacher))]
dat
dat
print(dat)
print(dat, digits=4)
print(dat, digits=5)
print(dat, digits=5)
print(dat, digits=4)
shiny::runApp('Infectious Disease Project/Data_Explorer')
shiny::runApp('C:/Users/cheta_000/Dropbox/websiteFiles/PersonalWebsite')
shiny::runApp('C:/Users/cheta_000/Dropbox/websiteFiles/PersonalWebsite')
shiny::runApp('Infectious Disease Project/OverTime_Transmission_App')
shiny::runApp('Infectious Disease Project/OverTime_Transmission_App')
shiny::runApp('Infectious Disease Project/OverTime_Transmission_App')
getwd()
setwd("Infectious Disease Project/OverTime_Transmission_App/")
deployApp()
library(shinyapps)
deployApp()
shiny::runApp('C:/Users/cheta_000/Dropbox/College/3_Third Year/06_Sixth Semester/R Working Directory/Infectious Disease Project/Data_Explorer')
setwd("../Data_Explorer/")
shiny::runApp()
shiny::runApp()
shiny::runApp('C:/Users/cheta_000/Dropbox/College/3_Third Year/06_Sixth Semester/CS 6501/Course Project/visualization')
shiny::runApp('C:/Users/cheta_000/Dropbox/College/3_Third Year/06_Sixth Semester/CS 6501/Course Project/visualization')
shiny::runApp('C:/Users/cheta_000/Dropbox/College/3_Third Year/06_Sixth Semester/CS 6501/Course Project/visualization')
shiny::runApp('C:/Users/cheta_000/Dropbox/College/3_Third Year/06_Sixth Semester/CS 6501/Course Project/visualization')
shiny::runApp('C:/Users/cheta_000/Dropbox/College/3_Third Year/06_Sixth Semester/CS 6501/Course Project/visualization')
shiny::runApp()
shiny::runApp('C:/Users/cheta_000/Dropbox/College/3_Third Year/06_Sixth Semester/CS 6501/Course Project/visualization')
shiny::runApp('C:/Users/cheta_000/Dropbox/College/3_Third Year/06_Sixth Semester/CS 6501/Course Project/visualization')
shiny::runApp('C:/Users/cheta_000/Dropbox/College/3_Third Year/06_Sixth Semester/CS 6501/Course Project/visualization', debug=T)
?shiny::runApp
shiny::runApp('C:/Users/cheta_000/Dropbox/College/3_Third Year/06_Sixth Semester/CS 6501/Course Project/visualization')
shiny::runApp('C:/Users/cheta_000/Dropbox/College/3_Third Year/06_Sixth Semester/CS 6501/Course Project/visualization')
shiny::runApp('C:/Users/cheta_000/Dropbox/College/3_Third Year/06_Sixth Semester/CS 6501/Course Project/visualization')
shiny::runApp('C:/Users/cheta_000/Dropbox/College/3_Third Year/06_Sixth Semester/CS 6501/Course Project/visualization')
shiny::runApp('C:/Users/cheta_000/Dropbox/College/3_Third Year/06_Sixth Semester/CS 6501/Course Project/visualization')
?h2
shiny::runApp('C:/Users/cheta_000/Dropbox/College/3_Third Year/06_Sixth Semester/CS 6501/Course Project/visualization')
setwd("../../../CS 6501/Course Project/visualization/")
runApp()
?tag$a
tags$a
?tags$a
?a
?a
runApp()
deployApp()
